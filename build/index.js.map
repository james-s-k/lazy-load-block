{"version":3,"file":"index.js","mappings":"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","sources":["webpack://lazy-load-block/./src/edit.js","webpack://lazy-load-block/./src/editor.scss","webpack://lazy-load-block/./src/index.js","webpack://lazy-load-block/./src/style.scss","webpack://lazy-load-block/external window [\"wp\",\"blockEditor\"]","webpack://lazy-load-block/external window [\"wp\",\"blocks\"]","webpack://lazy-load-block/external window [\"wp\",\"components\"]","webpack://lazy-load-block/external window [\"wp\",\"element\"]","webpack://lazy-load-block/external window [\"wp\",\"i18n\"]","webpack://lazy-load-block/external window \"React\"","webpack://lazy-load-block/webpack/bootstrap","webpack://lazy-load-block/webpack/runtime/chunk loaded","webpack://lazy-load-block/webpack/runtime/compat get default export","webpack://lazy-load-block/webpack/runtime/define property getters","webpack://lazy-load-block/webpack/runtime/hasOwnProperty shorthand","webpack://lazy-load-block/webpack/runtime/make namespace object","webpack://lazy-load-block/webpack/runtime/jsonp chunk loading","webpack://lazy-load-block/webpack/before-startup","webpack://lazy-load-block/webpack/startup","webpack://lazy-load-block/webpack/after-startup"],"sourcesContent":["/**\r\n * WordPress dependencies for block editor functionality\r\n */\r\nimport { useBlockProps, useInnerBlocksProps, InspectorControls } from '@wordpress/block-editor';\r\nimport { useEffect } from '@wordpress/element';\r\nimport { PanelBody, SelectControl, RangeControl, ColorPalette, ToggleControl } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Default template when block is first added\r\n */\r\nconst TEMPLATE = [\r\n    ['core/paragraph', {}]\r\n];\r\n\r\n/**\r\n * Edit component for the Lazy Load Block\r\n * Handles the block's behavior in the editor\r\n *\r\n * @param {Object} props               Block props\r\n * @param {Object} props.attributes    Block attributes\r\n * @param {Function} props.setAttributes Function to update attributes\r\n * @param {string} props.clientId     Unique block ID in editor\r\n */\r\nexport default function Edit({ attributes, setAttributes, clientId }) {\r\n    // Set unique ID for block only if not already set\r\n    useEffect(() => {\r\n        const uniqueId = `lazy-block-${clientId}`;\r\n        if (!attributes.dataBlockId || attributes.dataBlockId !== uniqueId) {\r\n            setAttributes({ dataBlockId: uniqueId });\r\n        }\r\n    }, [clientId, attributes.dataBlockId]);\r\n\r\n    // Set up block wrapper props with required class\r\n    const blockProps = useBlockProps({\r\n        className: 'wp-block-strive-lazy-load-block lazy-load-block'\r\n    });\r\n\r\n    // Configure inner blocks behavior\r\n    const innerBlocksProps = useInnerBlocksProps(\r\n        blockProps,\r\n        {\r\n            template: TEMPLATE,\r\n            templateLock: false\r\n        }\r\n    );\r\n\r\n    /**\r\n     * Available animation options for content reveal\r\n     * Each option corresponds to a CSS animation class\r\n     */\r\n    const animationOptions = [\r\n        { label: __('Fade', 'lazy-load-block'), value: 'fade' },\r\n        { label: __('Slide Up', 'lazy-load-block'), value: 'slide-up' },\r\n        { label: __('Slide Down', 'lazy-load-block'), value: 'slide-down' },\r\n        { label: __('Slide Left', 'lazy-load-block'), value: 'slide-left' },\r\n        { label: __('Slide Right', 'lazy-load-block'), value: 'slide-right' },\r\n        { label: __('Scale Up', 'lazy-load-block'), value: 'scale-up' },\r\n        { label: __('Scale Down', 'lazy-load-block'), value: 'scale-down' }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {/* Block Settings Sidebar */}\r\n            <InspectorControls>\r\n                {/* Animation Settings Panel */}\r\n                <PanelBody title={__('Animation Settings', 'lazy-load-block')}>\r\n                    <SelectControl\r\n                        label={__('Animation Type', 'lazy-load-block')}\r\n                        value={attributes.animation ?? 'fade'}\r\n                        options={animationOptions}\r\n                        onChange={(animation) => setAttributes({ animation })}\r\n                    />\r\n                    <RangeControl\r\n                        label={__('Animation Duration (ms)', 'lazy-load-block')}\r\n                        value={attributes.animationDuration ?? 300}\r\n                        onChange={(animationDuration) => setAttributes({ animationDuration })}\r\n                        min={100}\r\n                        max={6000}\r\n                        step={50}\r\n                    />\r\n                    <RangeControl\r\n                        label={__('Loading Trigger Offset (px)', 'lazy-load-block')}\r\n                        help={__('Distance from viewport when loading begins', 'lazy-load-block')}\r\n                        value={attributes.loadingOffset ?? 100}\r\n                        onChange={(loadingOffset) => setAttributes({ loadingOffset })}\r\n                        min={0}\r\n                        max={1000}\r\n                        step={10}\r\n                    />\r\n                </PanelBody>\r\n                \r\n                {/* Loading Spinner Settings Panel */}\r\n                <PanelBody title={__('Spinner Settings', 'lazy-load-block')}>\r\n                    <ToggleControl\r\n                        label={__('Show Loading Spinner', 'lazy-load-block')}\r\n                        checked={attributes.showSpinner ?? true}\r\n                        onChange={(showSpinner) => setAttributes({ showSpinner })}\r\n                    />\r\n                    \r\n                    {/* Show spinner customization options when enabled */}\r\n                    {attributes.showSpinner && (\r\n                        <>\r\n                            {/* Live spinner preview with hover animation */}\r\n                            <div className=\"llb-spinner-preview\">\r\n                                <div \r\n                                    className=\"llb-spinner-container\"\r\n                                    style={{\r\n                                        width: `${attributes.spinnerSize}px`,\r\n                                        height: `${attributes.spinnerSize}px`\r\n                                    }}\r\n                                >\r\n                                    <div \r\n                                        className=\"llb-spinner\"\r\n                                        style={{\r\n                                            borderWidth: `${attributes.spinnerBorderWidth}px`,\r\n                                            borderStyle: 'solid',\r\n                                            borderTopColor: attributes.spinnerPrimaryColor,\r\n                                            borderRightColor: attributes.spinnerSecondaryColor,\r\n                                            borderBottomColor: attributes.spinnerSecondaryColor,\r\n                                            borderLeftColor: attributes.spinnerSecondaryColor,\r\n                                            width: '100%',\r\n                                            height: '100%'\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <span className=\"llb-spinner-label\">\r\n                                    {__(' Hover to preview animation', 'lazy-load-block')}\r\n                                </span>\r\n                            </div>\r\n\r\n                            {/* Spinner size controls */}\r\n                            <RangeControl\r\n                                label={__('Spinner Size (px)', 'lazy-load-block')}\r\n                                value={attributes.spinnerSize ?? 40}\r\n                                onChange={(spinnerSize) => setAttributes({ spinnerSize })}\r\n                                min={20}\r\n                                max={100}\r\n                                step={2}\r\n                            />\r\n                            <RangeControl\r\n                                label={__('Border Width (px)', 'lazy-load-block')}\r\n                                value={attributes.spinnerBorderWidth ?? 4}\r\n                                onChange={(spinnerBorderWidth) => setAttributes({ spinnerBorderWidth })}\r\n                                min={2}\r\n                                max={10}\r\n                                step={1}\r\n                            />\r\n\r\n                            {/* Spinner color controls */}\r\n                            <div className=\"llb-color-control\">\r\n                                <label>{__('Primary Color (Spinning)', 'lazy-load-block')}</label>\r\n                                <ColorPalette\r\n                                    value={attributes.spinnerPrimaryColor ?? '#000000'}\r\n                                    onChange={(color) => setAttributes({ spinnerPrimaryColor: color })}\r\n                                    disableCustomColors={false}\r\n                                    clearable={false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"llb-color-control\">\r\n                                <label>{__('Secondary Color (Static)', 'lazy-load-block')}</label>\r\n                                <ColorPalette\r\n                                    value={attributes.spinnerSecondaryColor ?? '#e0e0e0'}\r\n                                    onChange={(color) => setAttributes({ spinnerSecondaryColor: color })}\r\n                                    disableCustomColors={false}\r\n                                    clearable={false}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </PanelBody>\r\n            </InspectorControls>\r\n\r\n            {/* Block Content Area */}\r\n            <div {...innerBlocksProps} />\r\n        </>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport {};","import { registerBlockType } from '@wordpress/blocks';\r\nimport metadata from '../block.json';\r\nimport Edit from './edit';\r\nimport { InnerBlocks } from '@wordpress/block-editor';\r\n\r\n// Import styles\r\nimport './style.scss';\r\nimport './editor.scss';\r\n\r\nconst settings = {\r\n    edit: Edit,\r\n    save: () => <InnerBlocks.Content />\r\n};\r\n\r\n// Register the block\r\nregisterBlockType(metadata.name, settings);\r\n\r\n// Export for potential use by other modules\r\nexport { metadata, settings };\r\nexport const name = metadata.name; ","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunklazy_load_block\"] = globalThis[\"webpackChunklazy_load_block\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useBlockProps","useInnerBlocksProps","InspectorControls","useEffect","PanelBody","SelectControl","RangeControl","ColorPalette","ToggleControl","__","TEMPLATE","Edit","attributes","setAttributes","clientId","_attributes$animation","_attributes$animation2","_attributes$loadingOf","_attributes$showSpinn","_attributes$spinnerSi","_attributes$spinnerBo","_attributes$spinnerPr","_attributes$spinnerSe","uniqueId","dataBlockId","blockProps","className","innerBlocksProps","template","templateLock","animationOptions","label","value","createElement","Fragment","title","animation","options","onChange","animationDuration","min","max","step","help","loadingOffset","checked","showSpinner","style","width","spinnerSize","height","borderWidth","spinnerBorderWidth","borderStyle","borderTopColor","spinnerPrimaryColor","borderRightColor","spinnerSecondaryColor","borderBottomColor","borderLeftColor","color","disableCustomColors","clearable","registerBlockType","metadata","InnerBlocks","settings","edit","save","Content","name"],"sourceRoot":""}